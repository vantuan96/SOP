@model IEnumerable<SOP.Models.Title>
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/_LayoutLogin.cshtml";
    var X = Html.X();
}
<script>
    var template = '<span style="color:{0};">{1}</span>';
    var pctChange = function (value) {
        return Ext.String.format(template, (value == true) ? (value = "Kích hoạt") : (value = "Chưa kích hoạt"), value);
    };
    var prepare = function (grid, toolbar, rowIndex, record) {
        var firstButton = toolbar.items.get(0);
        if (record.data.price < 50) {
            firstButton.setDisabled(true);
            firstButton.setTooltip("Disabled");
        }
    };
    var onSuccess = function (grid, data) {
        grid.show();
        grid.getStore().loadData(data);
    };
</script>
<div style="padding:10px">
    @(X.GridPanel()
        .Title("Danh sách chức vụ")
        .ID("GridPanel1")
        .Store(Html.X().Store()
        .RemotePaging(true)
        .PageSize(10)
        .DataSource(Model)
        .Model(Html.X().Model()
                .Fields(
                    new ModelField("Title_Id", ModelFieldType.Int),
                    new ModelField("Title_Name", ModelFieldType.String),
                    new ModelField()
                            {
                                Name = "Title_Active",
                                Type = ModelFieldType.Boolean,
                                Convert =
                                {
                                    Handler = "return value === true;"
                                }
                            }
                )
            )
        )
        .ColumnModel(
            Html.X().RowNumbererColumn().Width(40)
            .Sortable(false)
            .Text("STT"),
            Html.X().Column()
                .Text("Mã")
                .DataIndex("Title_Id")
                .Width(75)
                .Hidden(true),
            Html.X().Column()
                .Text("Tên chức vụ")
                .DataIndex("Title_Name")
                .Flex(1),
            Html.X().CheckColumn()
                .Text("Kích Hoạt")
                .Align(Alignment.Center)
                .DataIndex("Title_Active")
                .Width(80),
            Html.X().CommandColumn()
                .Width(60)
                .Commands(
                    Html.X().GridCommand()
                        .CommandName("Edit")
                        .Icon(Icon.NoteEdit)
                        .Text("Sửa")
                )
                .DirectEvents(de =>
                            {
                                de.Command.Url = Url.Action("Edit");
                                de.Command.ExtraParams.Add(new Parameter("Title_Id", "record.data.Title_Id", ParameterMode.Raw));
                                de.Command.ExtraParams.Add(new Parameter("Title_Name", "record.data.Title_Name", ParameterMode.Raw));
                                de.Command.ExtraParams.Add(new Parameter("Title_Active", "record.data.Title_Active", ParameterMode.Raw));
                            }),
                Html.X().CommandColumn()
                .Width(60)
                .Commands(
                    Html.X().GridCommand()
                        .CommandName("Delete")
                        .Icon(Icon.Delete)
                        .Text("Xóa")
                )
                .DirectEvents(de =>
                            {
                                de.Command.Confirmation.ConfirmRequest = true;
                                de.Command.Url = Url.Action("Delete");
                                de.Command.ExtraParams.Add(new Parameter("id", "record.data.Title_Id", ParameterMode.Raw));
                            })

                .PrepareToolbar("prepare")
                )
                .Plugins(
                      X.FilterHeader()
                )
                .BottomBar(

                        Html.X().PagingToolbar()
                        .Items(
                            Html.X().ToolbarSpacer(10)
                        )
                        .HideRefresh(true)
                        .Plugins(Html.X().ProgressBarPager())
                        )
                .TopBar(
                Html.X().Toolbar()
                    .Items(
                        Html.X().Button()
                            .Text("Thêm mới")
                            .Icon(Icon.Add)
                            .DirectEvents(de =>
                            {
                                de.Click.Url = Url.Action("Create");
                            }),
                        Html.X().ToolbarFill()
                            )
                    )
    )
</div>

